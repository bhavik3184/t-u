@model SubscriptionOrderDetailsModel
@using Nop.Web.Models.SubscriptionOrder
@{
   if (!Model.PrintMode)
   {
       Layout = "~/Views/Shared/_ColumnsOne.cshtml";
   }
   else
   {
       Layout = "~/Views/Shared/_Print.cshtml";
   }
   //title
   Html.AddTitleParts(T("PageTitle.SubscriptionOrderDetails").Text);
}
@if (Model.PrintMode)
{
   <script type="text/javascript">
       $(document).ready(function () {
           window.print();
       });
   </script>
}
<div class="page order-details-page article">
    @if (!Model.PrintMode)
    {
        <div class="page-title">
            <h1>@T("SubscriptionOrder.SubscriptionOrderInformation")</h1>
            <a href="@Url.RouteUrl("PrintSubscriptionOrderDetails", new { orderId = Model.Id })" target="_blank" class="button-2 print-order-button">@T("SubscriptionOrder.Print")</a>
            @if (!Model.PdfInvoiceDisabled)
            {
                <a href="@Url.RouteUrl("GetSubscriptionOrderPdfInvoice", new { orderId = Model.Id })" class="button-2 pdf-invoice-button">@T("SubscriptionOrder.GetPDFInvoice")</a>
            }
        </div>
    }
    <div class="page-body">
        @Html.Widget("orderdetails_page_top", Model.Id)

        <div class="order-overview">
            <div class="order-number">
                <strong>@T("SubscriptionOrder.SubscriptionOrder#")@Model.Id</strong>
            </div>
            <div class="order-date">
                @T("SubscriptionOrder.SubscriptionOrderDate"): @Model.CreatedOn.ToString("D")
            </div>
            <div class="order-status">
                @T("SubscriptionOrder.SubscriptionOrderStatus"): @Model.SubscriptionOrderStatus
            </div>
            <div class="order-total">
                @T("SubscriptionOrder.SubscriptionOrderTotal"): <strong>@Model.SubscriptionOrderTotal</strong>
            </div>
            @Html.Widget("orderdetails_page_overview", Model.Id)
        </div>

        <div class="order-details-area">
            <ul class="billing-info">
                <li class="title">
                    @T("SubscriptionOrder.BillingAddress")
                </li>
                <li class="name">
                    @Model.BillingAddress.FirstName @Model.BillingAddress.LastName
                </li>
                <li class="email">
                    @T("SubscriptionOrder.Email"): @Model.BillingAddress.Email
                </li>
                @if (Model.BillingAddress.PhoneEnabled)
                {
                    <li class="phone">
                        @T("SubscriptionOrder.Phone"): @Model.BillingAddress.PhoneNumber
                    </li>
                }
                @if (Model.BillingAddress.FaxEnabled)
                {
                    <li class="fax">
                        @T("SubscriptionOrder.Fax"): @Model.BillingAddress.FaxNumber
                    </li>
                }
                @if (Model.BillingAddress.CompanyEnabled && !String.IsNullOrEmpty(Model.BillingAddress.Company))
                {
                    <li class="company">
                        @Model.BillingAddress.Company
                    </li>
                }
                @if (Model.BillingAddress.StreetAddressEnabled)
                {
                    <li class="address1">
                        @Model.BillingAddress.Address1
                    </li>
                }
                @if (Model.BillingAddress.StreetAddress2Enabled && !String.IsNullOrEmpty(Model.BillingAddress.Address2))
                {
                    <li class="address2">
                        @Model.BillingAddress.Address2
                    </li>
                }
                @if (Model.BillingAddress.CityEnabled ||
           Model.BillingAddress.StateProvinceEnabled ||
           Model.BillingAddress.ZipPostalCodeEnabled)
                {
                    <li class="city-state-zip">
                        @if (Model.BillingAddress.CityEnabled)
                        {
                            @Model.BillingAddress.City
                        }
                        @if (Model.BillingAddress.CityEnabled && (Model.BillingAddress.StateProvinceEnabled || Model.BillingAddress.ZipPostalCodeEnabled))
                        {
                            <text>,</text>
                        }
                        @if (Model.BillingAddress.StateProvinceEnabled)
                        {
                            @Model.BillingAddress.StateProvinceName
                        }
                        @if (Model.BillingAddress.ZipPostalCodeEnabled)
                        {
                            @Model.BillingAddress.ZipPostalCode
                        }
                    </li>
                }
                @if (Model.BillingAddress.CountryEnabled && !String.IsNullOrEmpty(Model.BillingAddress.CountryName))
                {
                    <li class="country">
                        @Model.BillingAddress.CountryName
                    </li>
                }
                @if (!String.IsNullOrEmpty(Model.VatNumber))
                {
                    <li class="vat">
                        <span class="label">
                            @T("SubscriptionOrder.VATNumber")
                        </span>
                        <span class="value">
                            @Model.VatNumber
                        </span>
                    </li>
                }
                @if (!String.IsNullOrEmpty(Model.BillingAddress.FormattedCustomAddressAttributes))
                {
                    <li class="custom-attributes-view">
                        @Html.Raw(Model.BillingAddress.FormattedCustomAddressAttributes)
                    </li>
                }
                @if (!String.IsNullOrEmpty(Model.PaymentMethod))
                {
                    <li class="title">
                        @T("SubscriptionOrder.Payment")
                    </li>
                    <li class="payment-method">
                        <span class="label">
                            @T("SubscriptionOrder.Payment.Method"):
                        </span>
                        <span class="value">
                            @Model.PaymentMethod
                        </span>
                    </li>
                    if (!Model.PrintMode)
                    {
                        <li class="payment-method-status">
                            <span class="label">
                                @T("SubscriptionOrder.Payment.Status"):
                            </span>
                            <span class="value">
                                @Model.PaymentMethodStatus
                            </span>
                        </li>
                    }
                    if (!Model.PrintMode && Model.CanRePostProcessPayment)
                    {
                        @*Complete payment (for redirection payment methods)*@
                        <li class="repost">
                            @using (Html.BeginRouteForm("SubscriptionOrderDetails", FormMethod.Post))
                            {
                                @Html.AntiForgeryToken()
                                <input type="submit" name="repost-payment" value="@T("SubscriptionOrder.RetryPayment")" class="button-2 re-order-button" />
                                <p class="hint">
                                    <em>@T("SubscriptionOrder.RetryPayment.Hint")</em>
                                </p>
                            }
                        </li>
                    }
                }
                @if (Model.CustomValues != null)
                {
                    foreach (var item in Model.CustomValues)
                    {
                        <li class="custom-value">
                            <span class="label">
                                @item.Key:
                            </span>
                            <span class="value">
                                @(item.Value != null ? item.Value.ToString() : "")
                            </span>
                        </li>
                    }
                }
            </ul>
            @if (Model.IsShippable)
            {
                <ul class="shipping-info">
                    @if (!Model.PickUpInStore)
                    {

                        <li class="title">
                            @T("SubscriptionOrder.ShippingAddress")
                        </li>
                        <li class="name">
                            @Model.ShippingAddress.FirstName @Model.ShippingAddress.LastName
                        </li>
                        <li class="email">
                            @T("SubscriptionOrder.Email"): @Model.ShippingAddress.Email
                        </li>
                        if (Model.ShippingAddress.PhoneEnabled)
                        {
                            <li class="phone">
                                @T("SubscriptionOrder.Phone"): @Model.ShippingAddress.PhoneNumber
                            </li>
                        }
                        if (Model.ShippingAddress.FaxEnabled)
                        {
                            <li class="fax">
                                @T("SubscriptionOrder.Fax"): @Model.ShippingAddress.FaxNumber
                            </li>
                        }
                        if (Model.ShippingAddress.CompanyEnabled && !String.IsNullOrEmpty(Model.ShippingAddress.Company))
                        {
                            <li class="company">
                                @Model.ShippingAddress.Company
                            </li>
                        }
                        if (Model.ShippingAddress.StreetAddressEnabled)
                        {
                            <li class="address1">
                                @Model.ShippingAddress.Address1
                            </li>
                        }
                        if (Model.ShippingAddress.StreetAddress2Enabled && !String.IsNullOrEmpty(Model.ShippingAddress.Address2))
                        {
                            <li class="address2">
                                @Model.ShippingAddress.Address2
                            </li>
                        }
                        if (Model.ShippingAddress.CityEnabled ||
                            Model.ShippingAddress.StateProvinceEnabled ||
                            Model.ShippingAddress.ZipPostalCodeEnabled)
                        {
                            <li class="city-state-zip">
                                @if (Model.ShippingAddress.CityEnabled)
                                {
                                    @Model.ShippingAddress.City
                                }
                                @if (Model.ShippingAddress.CityEnabled && (Model.ShippingAddress.StateProvinceEnabled || Model.ShippingAddress.ZipPostalCodeEnabled))
                                {
                                    <text>,</text>
                                }
                                @if (Model.ShippingAddress.StateProvinceEnabled)
                                {
                                    @Model.ShippingAddress.StateProvinceName
                                }
                                @if (Model.ShippingAddress.ZipPostalCodeEnabled)
                                {
                                    @Model.ShippingAddress.ZipPostalCode
                                }
                            </li>
                        }
                        if (Model.ShippingAddress.CountryEnabled && !String.IsNullOrEmpty(Model.ShippingAddress.CountryName))
                        {
                            <li class="country">
                                @Model.ShippingAddress.CountryName
                            </li>
                        }
                        if (!String.IsNullOrEmpty(Model.ShippingAddress.FormattedCustomAddressAttributes))
                        {
                            <li class="custom-attributes-view">
                                @Html.Raw(Model.ShippingAddress.FormattedCustomAddressAttributes)
                            </li>
                        }
                    }
                     
                </ul>
            }
        </div>

        @if (Model.Items.Count > 0)
        {
            @Html.Widget("orderdetails_page_beforeproducts", Model.Id)
            <div class="section products">
                <div class="title">
                    <strong>Details</strong>
                </div>
                <div class="table-wrapper">
                    <table class="data-table">
                        <colgroup>
                            @if (Model.ShowSku)
                            {
                                <col width="1" />
                            }
                            <col />
                            <col width="1" />
                            <col width="1" />
                            <col width="1" />
                        </colgroup>
                        <thead>
                            <tr>
                                @if (Model.ShowSku)
                                {
                                    <th class="sku">
                                        @T("SubscriptionOrder.Product(s).SKU")
                                    </th>
                                }
                                <th class="name">
                                    @T("SubscriptionOrder.Product(s).Name")
                                </th>
                                <th class="price">
                                    Duration
                                </th>
                                <th class="unit-price">
                                    No. of Items <br />borrowed at a time
                                </th>
                                <th>
                                    Maximum No. of <br />Deliveries** allowed in<br /> a month
                                </th>
                                <th class="total">
                                    @T("SubscriptionOrder.Product(s).Total")
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.Items)
                            {
                                <tr>
                                    @if (Model.ShowSku)
                                    {
                                        <td class="sku">
                                            <label class="td-title">@T("SubscriptionOrder.Product(s).SKU"):</label>
                                            <span class="sku-number">@item.Sku</span>
                                        </td>
                                    }
                                    <td class="product">
                                        @if (!Model.PrintMode)
                                        {
                                            <em><a href="@Url.RouteUrl("Product", new { SeName = item.ProductSeName })">@item.ProductName</a></em>
                                        }
                                        else
                                        {
                                            @item.ProductName
                                        }
                                        @if (!String.IsNullOrEmpty(item.AttributeInfo))
                                        {
                                            <div class="attributes">
                                                @Html.Raw(item.AttributeInfo)
                                            </div>
                                        }
                                        @if (!String.IsNullOrEmpty(item.RentalInfo))
                                        {
                                            <div class="rental-info">
                                                @Html.Raw(item.RentalInfo)
                                            </div>
                                        }
                                        @if (item.DownloadId > 0)
                                        {
                                            <div class="download">
                                                <a href="@Url.RouteUrl("GetDownload", new { orderItemId = item.SubscriptionOrderItemGuid })">@T("DownloadableProducts.Fields.Download")</a>
                                            </div>
                                        }
                                        @if (item.LicenseId > 0)
                                        {
                                            <div class="download license">
                                                <a href="@Url.RouteUrl("GetLicense", new {orderItemId = item.SubscriptionOrderItemGuid})">@T("DownloadableProducts.Fields.DownloadLicense")</a>
                                            </div>
                                        }
                                        @Html.Widget("orderdetails_product_line", item.Id)
                                    </td>
                                    <td class="unit-price">
                                        <span class="product-unit-price">@item.Duration</span>
                                    </td>
                                    <td class="unit-price">
                                        <span class="product-unit-price">@item.NoOfItemsToBorrow</span>
                                    </td>
                                    <td class="product">
                                        <span class="product-unit-price">@item.MaxNoOfDeliveries</span>
                                    </td>

                                    <td class="total">
                                        <label class="td-title">@T("SubscriptionOrder.Product(s).Total"):</label>
                                        <span class="product-subtotal">@item.SubTotal</span>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            @Html.Widget("orderdetails_page_afterproducts", Model.Id)

            <div class="section options">
                @if (Model.Items.Count > 0 && Model.DisplayTaxShippingInfo)
                {
                    var inclTax = Model.PricesIncludeTax;
                    //tax info is already included in the price (incl/excl tax). that's why we display only shipping info here
                    //of course, you can modify appropriate locales to include VAT info there
                    <div class="tax-shipping-info">
                        @T(inclTax ? "SubscriptionOrder.TaxShipping.InclTax" : "SubscriptionOrder.TaxShipping.ExclTax", Url.RouteUrl("Topic", new { SeName = Html.GetTopicSeName("shippinginfo") }))
                    </div>
                }
                @if (!String.IsNullOrEmpty(Model.CheckoutAttributeInfo))
                {
                    <div class="selected-checkout-attributes">
                        @Html.Raw(Model.CheckoutAttributeInfo)
                    </div>
                }
                @if (!Model.PrintMode)
                {
                    <div class="actions">
                        @if (Model.IsReSubscriptionOrderAllowed)
                        {
                            <input type="button" value="Renew Plan" class="button-1 re-order-button" onclick="setLocation('@Url.RouteUrl("ReSubscriptionOrder", new { orderId = Model.Id })    ')" />
                            <input type="button" value="Chnage Plan" class="button-1 re-order-button" onclick="setLocation('/cart')" />

                        }
                        @if (Model.IsReturnRequestAllowed)
                        {
                            <input type="button" value="@T("SubscriptionOrder.ReturnItems")" class="button-2 return-items-button" onclick="setLocation('@Url.RouteUrl("ReturnRequest", new { orderId = Model.Id })    ')" />
                        }
                    </div>
                }
            </div>

            <div class="section totals">
                <div class="total-info">
                    <table class="cart-total">
                        <tbody>
                            <tr>
                                <td class="cart-total-left">
                                    <label>@T("SubscriptionOrder.SubTotal"):</label>
                                </td>
                                <td class="cart-total-right">
                                    <span>@Model.SubscriptionOrderSubtotal</span>
                                </td>
                            </tr>
                            @if (Model.PreviousRentalBalanceValue > 0)
                            {
                                <tr>
                                    <td class="cart-total-left">
                                        <label>Previous Membership Balance:</label>
                                    </td>
                                    <td class="cart-total-right">
                                        <span>-  @Model.PreviousRentalBalance</span>
                                    </td>
                                </tr>
                            }
                            @if (!string.IsNullOrEmpty(Model.SubscriptionOrderSubTotalDiscount))
                            {
                                <tr>
                                    <td class="cart-total-left">
                                        <label>@T("SubscriptionOrder.SubTotalDiscount"):</label>
                                    </td>
                                    <td class="cart-total-right">
                                        <span>@Model.SubscriptionOrderSubTotalDiscount</span>
                                    </td>
                                </tr>
                            }
                            @if (!string.IsNullOrEmpty(Model.RegistrationCharge))
                            {
                                <tr>
                                    <td class="cart-total-left">
                                        <label>Registration Charges:</label>
                                    </td>
                                    <td class="cart-total-right">
                                        <span>@Model.RegistrationCharge</span>
                                    </td>
                                </tr>
                            }
                            @if (!string.IsNullOrEmpty(Model.SecurityDeposit))
                            {
                                <tr>
                                    <td class="cart-total-left">
                                        <label>Security Deposit:</label>
                                    </td>
                                    <td class="cart-total-right">
                                        <span>@Model.SecurityDeposit</span>
                                    </td>
                                </tr>
                            }
                            
                            @if (!string.IsNullOrEmpty(Model.PaymentMethodAdditionalFee))
                            {
                                <tr>
                                    <td class="cart-total-left">
                                        <label>@T("SubscriptionOrder.PaymentMethodAdditionalFee"):</label>
                                    </td>
                                    <td class="cart-total-right">
                                        <span>@Model.PaymentMethodAdditionalFee</span>
                                    </td>
                                </tr>
                            }
                            @if (Model.DisplayTaxRates && Model.TaxRates.Count > 0)
                            {
                                foreach (var taxRate in Model.TaxRates)
                                {
                                    <tr>
                                        <td class="cart-total-left">
                                            <label>@string.Format(T("SubscriptionOrder.TaxRateLine").Text, taxRate.Rate):</label>
                                        </td>
                                        <td class="cart-total-right">
                                            <span>@taxRate.Value</span>
                                        </td>
                                    </tr>
                                }
                            }
                            @if (Model.DisplayTax)
                            {
                                <tr>
                                    <td class="cart-total-left">
                                        <label>@T("SubscriptionOrder.Tax"):</label>
                                    </td>
                                    <td class="cart-total-right">
                                        <span>@Model.Tax</span>
                                    </td>
                                </tr>
                            }
                            @if (!string.IsNullOrEmpty(Model.SubscriptionOrderTotalDiscount))
                            {
                                <tr>
                                    <td class="cart-total-left">
                                        <label>@T("SubscriptionOrder.TotalDiscount"):</label>
                                    </td>
                                    <td class="cart-total-right">
                                        <span>@Model.SubscriptionOrderTotalDiscount</span>
                                    </td>
                                </tr>
                            }
                            @if (Model.GiftCards.Count > 0)
                            {
                                foreach (var gc in Model.GiftCards)
                                {
                                    <tr>
                                        <td class="cart-total-left">
                                            <label>@string.Format(T("SubscriptionOrder.GiftCardInfo").Text, gc.CouponCode):</label>
                                        </td>
                                        <td class="cart-total-right">
                                            <span>@gc.Amount</span>
                                        </td>
                                    </tr>
                                }
                            }
                            @if (Model.RedeemedRewardPoints > 0)
                            {
                                <tr>
                                    <td class="cart-total-left">
                                        <label>@string.Format(T("SubscriptionOrder.RewardPoints").Text, Model.RedeemedRewardPoints):</label>
                                    </td>
                                    <td class="cart-total-right">
                                        <span>@Model.RedeemedRewardPointsAmount</span>
                                    </td>
                                </tr>
                            }
                            <tr>
                                <td class="cart-total-left">
                                    <label>Net Payable:</label>
                                </td>
                                <td class="cart-total-right">
                                    <span><strong>@Model.SubscriptionOrderTotal</strong></span>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        }
        @if (!Model.PrintMode)
        {
            if (Model.Shipments.Count > 0)
            {
                <div class="section shipments">
                    <div class="title">
                        <strong>@T("SubscriptionOrder.Shipments")</strong>
                    </div>
                    <div class="table-wrapper">
                        <table class="data-table">
                            <colgroup>
                                <col width="1" />
                                <col />
                                <col />
                                <col />
                                <col />
                            </colgroup>
                            <thead>
                                <tr>
                                    <th class="shipment-id">
                                        @T("SubscriptionOrder.Shipments.ID")
                                    </th>
                                    <th class="tracking-number">
                                        @T("SubscriptionOrder.Shipments.TrackingNumber")
                                    </th>
                                    <th class="shipping-date">
                                        @T("SubscriptionOrder.Shipments.ShippedDate")
                                    </th>
                                    <th class="delivery-date">
                                        @T("SubscriptionOrder.Shipments.DeliveryDate")
                                    </th>
                                    <th class="view-details">
                                        @T("SubscriptionOrder.Shipments.ViewDetails")
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.Shipments)
                                {
                                    <tr>
                                        <td class="shipment-id">
                                            <label>@T("SubscriptionOrder.Shipments.ID"):</label>
                                            <span>@item.Id.ToString()</span>
                                        </td>
                                        <td class="tracking-number">
                                            <label>@T("SubscriptionOrder.Shipments.TrackingNumber"):</label>
                                            @item.TrackingNumber
                                        </td>
                                        <td class="shipped-date">
                                            <label>@T("SubscriptionOrder.Shipments.ShippedDate"):</label>
                                            @if (item.ShippedDate.HasValue)
                                            {
                                                <span>@item.ShippedDate.Value.ToString("D")</span>
                                            }
                                            else
                                            {
                                                <span>@T("SubscriptionOrder.Shipments.ShippedDate.NotYet")</span>
                                            }
                                        </td>
                                        <td class="delivery-date">
                                            <label>@T("SubscriptionOrder.Shipments.DeliveryDate"):</label>
                                            @if (item.DeliveryDate.HasValue)
                                            {
                                                <span>@item.DeliveryDate.Value.ToString("D")</span>
                                            }
                                            else
                                            {
                                                <span>@T("SubscriptionOrder.Shipments.DeliveryDate.NotYet")</span>
                                            }
                                        </td>
                                        <td class="view-details">
                                            <a href="@Url.RouteUrl("ShipmentDetails", new { shipmentId = item.Id })" title="@T("SubscriptionOrder.Shipments.ViewDetails")">@T("SubscriptionOrder.Shipments.ViewDetails")</a>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            }
        }
        @if (!Model.PrintMode)
        {
            if (Model.SubscriptionOrderNotes.Count > 0)
            {
                <div class="section order-notes">
                    <div class="title">
                        <strong>@T("SubscriptionOrder.Notes")</strong>
                    </div>
                    <div class="table-wrapper">
                        <table class="data-table">
                            <colgroup>
                                <col />
                                <col />
                            </colgroup>
                            <thead>
                                <tr>
                                    <th class="created-on">
                                        @T("SubscriptionOrder.Notes.CreatedOn")
                                    </th>
                                    <th class="note">
                                        @T("SubscriptionOrder.Notes.Note")
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.SubscriptionOrderNotes)
                                {
                                    <tr>
                                        <td class="created-on">
                                            @item.CreatedOn.ToString()
                                        </td>
                                        <td class="note">
                                            @Html.Raw(item.Note)
                                            @if (item.HasDownload)
                                            {
                                                <p class="download">
                                                    <a href="@Url.RouteUrl("GetSubscriptionOrderNoteFile", new { ordernoteid = item.Id })">@T("SubscriptionOrder.Notes.Download")</a>
                                                </p>
                                            }
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            }
        }
        @Html.Widget("orderdetails_page_bottom", Model.Id)
    </div>
</div>