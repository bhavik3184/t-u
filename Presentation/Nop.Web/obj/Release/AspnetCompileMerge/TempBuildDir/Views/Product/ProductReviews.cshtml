@model ProductReviewOverviewModel
@using System.Globalization
@using Nop.Web.Models.Catalog;
@{
    int ratingPercent = 0;
    if (Model.TotalReviews != 0)
    {
        ratingPercent = ((Model.RatingSum * 100) / Model.TotalReviews) / 5;
    }
}
@if (Model.AllowCustomerReviews)
{


    <div class="page product-reviews-page">

        <div class="page-body">
            @Html.Widget("productreviews_page_top", Model.ProductReviewsModel.ProductId)
            @if (Model.ProductReviewsModel.AddProductReview.SuccessfullyAdded)
            {
                <div class="result">
                    @Model.ProductReviewsModel.AddProductReview.Result
                </div>
            }
            else
            {
                <div class="write-review" id="review-form">
                    <div class="title">
                        <strong>@T("Reviews.Write")</strong>
                    </div>



                    <div class="fieldset">
                        <div class="form-fields">
                            <div class="inputs">
                                @Html.LabelFor(model => model.ProductReviewsModel.AddProductReview.Title, new { }, ":")
                                <input class="review-title" id="reviewTitle" type="text" />
                            </div>
                            <div class="inputs">
                                @Html.LabelFor(model => model.ProductReviewsModel.AddProductReview.ReviewText, new { }, ":")
                                <textarea class="review-text" id="reviewText"></textarea>
                            </div>
                            <div class="review-rating">
                                @Html.LabelFor(model => model.ProductReviewsModel.AddProductReview.Rating, new { }, ":")
                                <ul>
                                    <li class="label first">@T("Reviews.Fields.Rating.Bad")</li>
                                    <li class="rating-options">
                                        @Html.RadioButtonFor(model => model.ProductReviewsModel.AddProductReview.Rating, "1", new { id = "addproductrating_1" })
                                        @Html.RadioButtonFor(model => model.ProductReviewsModel.AddProductReview.Rating, "2", new { id = "addproductrating_2" })
                                        @Html.RadioButtonFor(model => model.ProductReviewsModel.AddProductReview.Rating, "3", new { id = "addproductrating_3" })
                                        @Html.RadioButtonFor(model => model.ProductReviewsModel.AddProductReview.Rating, "4", new { id = "addproductrating_4" })
                                        @Html.RadioButtonFor(model => model.ProductReviewsModel.AddProductReview.Rating, "5", new { id = "addproductrating_5" })
                                    </li>
                                    <li class="label last">@T("Reviews.Fields.Rating.Excellent")</li>
                                </ul>
                            </div>
                            @if (Model.ProductReviewsModel.AddProductReview.DisplayCaptcha)
                            {
                                <div class="captcha-box">
                                    @Html.Raw(Html.GenerateCaptcha())
                                </div>
                            }
                        </div>
                    </div>
                    <div class="buttons">
                        <a id="btnaddreview" name="add-review" class="button-1 write-product-review-button">@T("Reviews.SubmitButton")</a>
                    </div>

                </div>
            }
            @if (Model.ProductReviewsModel.Items.Count > 0)
            {
                <div class="product-review-list">
                    <div class="title">
                        <strong>@T("Reviews.ExistingReviews")</strong>
                    </div>
                    @foreach (var review in Model.ProductReviewsModel.Items)
                    {
                        int ratingPercent1 = review.Rating * 20;
                        <div class="product-review-item">
                            <div class="review-item-head">
                                <div class="review-title">
                                    <strong>@review.Title</strong>
                                </div>
                                <div class="product-review-box">
                                    <div class="rating">
                                        <div style="width: @(ratingPercent1)%">
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="review-content">
                                <div class="review-text">
                                    @Html.Raw(Nop.Core.Html.HtmlHelper.FormatText(review.ReviewText, false, true, false, false, false, false))
                                </div>
                                <div class="review-info">
                                    <span class="user">
                                        <label>@T("Reviews.From"):</label>
                                        @if (review.AllowViewingProfiles)
                                        {
                                            <a href="@Url.RouteUrl("CustomerProfile", new { id = review.CustomerId })">@(review.CustomerName)</a>
                                        }
                                        else
                                        {
                                            @review.CustomerName
                                        }
                                    </span>
                                    <span class="separator">|</span>
                                    <span class="date">
                                        <label>@T("Reviews.Date"):</label>
                                        <span>@review.WrittenOnStr</span>
                                    </span>
                                </div>
                                @Html.Partial("_ProductReviewHelpfulness", review.Helpfulness, new ViewDataDictionary())
                                @Html.Widget("productreviews_page_inside_review", review.Id)
                            </div>
                        </div>
                    }
                </div>
            }
            @Html.Widget("productreviews_page_bottom", Model.ProductReviewsModel.ProductId)
        </div>
    </div>
}


<script>
    $(function () {
        $("#btnaddreview").click(function () {
            $.ajax({
                type: 'POST',
                url: '/ProductReview/',
                data: {  "productId": @Model.ProductId,"reviewTitle": $("#reviewTitle").val(),"reviewText": $("#reviewText").val(),"reviewRating":1 },
                cache: false,
                success: function (data) {
                    if(data.status ==1)
                        $("#shippingresult").html('Review submited successfully.');
                    else
                        $("#shippingresult").html('Review not submited successfully.');
                },
                error: function () {
                    alert("error");
                }
            });
        });
    });
</script>