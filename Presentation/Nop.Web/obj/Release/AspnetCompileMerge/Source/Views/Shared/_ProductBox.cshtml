@model ProductOverviewModel
@using Nop.Core
@using Nop.Core.Domain.SubscriptionOrders
@using Nop.Core.Domain.Tax
@using Nop.Core.Infrastructure
@using Nop.Web.Models.Catalog;
@{
    //prepare "Add to cart" AJAX link
    string addtocartlink = "";
    var borrowCartTypeId = (int)BorrowCartType.BorrowCart;
    var quantity = 1;
    if (Model.ProductPrice.ForceRedirectionAfterAddingToCart)
    {
        addtocartlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = Model.Id, borrowCartTypeId = borrowCartTypeId, quantity = quantity, forceredirection = Model.ProductPrice.ForceRedirectionAfterAddingToCart });
    }
    else
    {
        addtocartlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = Model.Id, borrowCartTypeId = borrowCartTypeId, quantity = quantity });
    }

    var addtomytoyboxlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = Model.Id, borrowCartTypeId = (int)BorrowCartType.MyToyBox, quantity = quantity });
    var addtocomparelink = Url.RouteUrl("AddProductToCompare", new { productId = Model.Id });
}
<div class="product-item" data-productid="@Model.Id">
   
    <div class="picture">
        <a href="@Url.RouteUrl("Product", new { SeName = Model.SeName })" title="@Model.DefaultPictureModel.Title">
            <img alt="@Model.DefaultPictureModel.AlternateText" src="@Model.DefaultPictureModel.ImageUrl" title="@Model.DefaultPictureModel.Title" />
        </a>
        <div class="caption">
            <h3 ng-click="openDefault(@Model.Id)" style="vertical-align: middle; font-weight:normal; /* position: absolute; */ /* left: 30%; */ margin: 100px auto 0; text-align: center; width: 60%; ">Quick View</h3>
        </div>
    </div>
    <div class="details">
        <h2 class="product-title">
            <a href="@Url.RouteUrl("Product", new { SeName = Model.SeName })">@Model.Name</a>
           
        </h2>
        @if (Model.ReviewOverviewModel.AllowCustomerReviews)
        {
            int ratingPercent = 0;
            if (Model.ReviewOverviewModel.TotalReviews != 0)
            {
                ratingPercent = ((Model.ReviewOverviewModel.RatingSum * 100) / Model.ReviewOverviewModel.TotalReviews) / 5;
            }
            <div class="product-rating-box" title="@string.Format(T("Reviews.TotalReviews").Text, Model.ReviewOverviewModel.TotalReviews)">
                <div class="rating">
                    <div style="width: @(ratingPercent)%">
                    </div>
                </div>
            </div>
        }
        <div class="description">
            @Html.Raw(Model.ShortDescription)
          
        </div>
        <div class="add-info">
            @Html.Widget("productbox_addinfo_before", Model.Id)
            <div class="prices">
                @if (!String.IsNullOrEmpty(Model.ProductPrice.OldPrice))
                {
                    <span class="price old-price">@Model.ProductPrice.OldPrice</span>
                }
                <span class="price actual-price">@Model.ProductPrice.Price</span>
                @if (Model.ProductPrice.DisplayTaxShippingInfo)
                {
                    var inclTax = EngineContext.Current.Resolve<IWorkContext>().TaxDisplayType == TaxDisplayType.IncludingTax;
                    //tax info is already included in the price (incl/excl tax). that's why we display only shipping info here
                    //of course, you can modify appropriate locales to include VAT info there
                    <span class="tax-shipping-info">
                        @T(inclTax ? "Products.Price.TaxShipping.InclTax" : "Products.Price.TaxShipping.ExclTax", Url.RouteUrl("Topic", new { SeName = Html.GetTopicSeName("shippinginfo") }))
                    </span>
                    }
            </div>
            @Html.Widget("productbox_addinfo_middle", Model.Id)
            <div class="buttons">
                @*<input type="button" value="@T("Products.Details")" class="button-1 product-box-detail-button" onclick="setLocation('@Url.RouteUrl("Product", new { SeName = Model.SeName })')" />*@
                @if (!Model.ProductPrice.DisableBuyButton)
{
    var addToCartText = T("BorrowCart.AddToCart").Text;
    if (Model.ProductPrice.IsRental)
    {
        addToCartText = T("BorrowCart.Rent").Text;
    }
    if (Model.ProductPrice.AvailableForPreOrder)
    {
        addToCartText = T("BorrowCart.PreOrder").Text;
    }
    <input type="button" value="Add to MyToyBox" class=" button-2 add-to-mytoybox-button" onclick="AjaxCart.addproducttocart_catalog('@addtomytoyboxlink');return false;" />
                                    @*<input type="button" value="@T("ShoppingCart.AddToMyToyBox")" title="@T("ShoppingCart.AddToMyToyBox")" class="button-2 add-to-mytoybox-button" onclick="AjaxCart.addproducttocart_catalog('@addtomytoyboxlink');return false;" />*@
}
                 
            </div>
            @Html.Widget("productbox_addinfo_after", Model.Id)
        </div>
    </div>


</div>


