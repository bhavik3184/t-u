@model Nop.Admin.Models.SubscriptionOrders.SubscriptionOrderListModel
@{
    var defaultGridPageSize = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().DefaultGridPageSize;
    var gridPageSizes = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().GridPageSizes;

    //page title
    ViewBag.Title = T("Admin.Subscriptions").Text;
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="section-header">
        <div class="title">
            <img src="@Url.Content("~/Administration/Content/images/ico-sales.png")" alt="" />
            @T("Admin.Subscriptions")
        </div>
        <div class="options">
            @if (!Model.IsLoggedInAsVendor)
            {
                //a vendor cannot export/import orders
                <input type="submit" name="exportxml-all" class="k-button" value="@T("Admin.Common.ExportToXml.All")" />
                <input type="button" id="exportxml-selected" class="k-button" value="@T("Admin.Common.ExportToXml.Selected")" />
                <input type="submit" name="exportexcel-all" class="k-button" value="@T("Admin.Common.ExportToExcel.All")" />
                <input type="button" id="exportexcel-selected" class="k-button" value="@T("Admin.Common.ExportToExcel.Selected")" />
            }
            <input type="submit" name="pdf-invoice-all" class="k-button" value="@T("Admin.SubscriptionOrders.PdfInvoice.All")" />
            <input type="button" id="pdf-invoice-selected" class="k-button" value="@T("Admin.SubscriptionOrders.PdfInvoice.Selected")" />
        </div>
    </div>
    <table width="100%">
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.StartDate):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.StartDate)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.EndDate):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.EndDate)
            </td>
        </tr>
        <tr @(Model.IsLoggedInAsVendor ? Html.Raw("style='display: none;'") : null)>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.SubscriptionOrderStatusId):
            </td>
            <td class="adminData">
                @Html.DropDownList("SubscriptionOrderStatusId", Model.AvailableSubscriptionOrderStatuses)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.PaymentStatusId):
            </td>
            <td class="adminData">
                @Html.DropDownList("PaymentStatusId", Model.AvailablePaymentStatuses)
            </td>
        </tr>
        <tr @(Model.IsLoggedInAsVendor ? Html.Raw("style='display: none;'") : null)>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.ShippingStatusId):
            </td>
            <td class="adminData">
                @Html.DropDownList("ShippingStatusId", Model.AvailableShippingStatuses)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.StoreId):
            </td>
            <td class="adminData">
                @Html.DropDownList("StoreId", Model.AvailableStores)
            </td>
        </tr>
        <tr @(Model.IsLoggedInAsVendor ? Html.Raw("style='display: none;'") : null)>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.VendorId):
            </td>
            <td class="adminData">
                @Html.DropDownList("VendorId", Model.AvailableVendors)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.WarehouseId):
            </td>
            <td class="adminData">
                @Html.DropDownList("WarehouseId", Model.AvailableWarehouses)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.BillingEmail):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.BillingEmail)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.BillingLastName):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.BillingLastName)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.BillingCountryId):
            </td>
            <td class="adminData">
                @Html.DropDownList("BillingCountryId", Model.AvailableCountries)
            </td>
        </tr>
        <tr @(Model.IsLoggedInAsVendor ? Html.Raw("style='display: none;'") : null)>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.PaymentMethodSystemName):
            </td>
            <td class="adminData">
                @Html.DropDownList("PaymentMethodSystemName", Model.AvailablePaymentMethods)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.PlanId):
            </td>
            <td class="adminData">
                <input type="text" id="search-plan-name" autocomplete="off" />
                <span id="search-plan-friendly-name"></span>
                <input type="button" id="search-plan-clear" class="k-button" style="display:none;" value="@T("Admin.Common.Clear")" />
                

                @Html.TextBoxFor(model => model.PlanId, new { autocomplete = "off", style = "display:none;" })
                <script type="text/javascript">
                    $(document).ready(function() {
                        $('#search-plan-name').autocomplete({
                            delay: 500,
                            minLength: 3,
                            source: '@(Url.Action("PlanSearchAutoComplete"))',
                            select: function(event, ui) {
                                $('#@Html.FieldIdFor(model => model.PlanId)').val(ui.item.planid);
                                $('#search-plan-friendly-name').text(ui.item.label);

                                $('#search-plan-clear').show();
                                return false;
                            }
                        });

                        //remove button
                        $('#search-plan-clear').click(function () {
                            $('#@Html.FieldIdFor(model => model.PlanId)').val('0');
                            $('#search-plan-friendly-name').text('');
                            $('#search-plan-clear').hide();
                            return false;
                        });
                    });
                </script>
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.SubscriptionOrderNotes):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.SubscriptionOrderNotes)
            </td>
        </tr>
       <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.SubscriptionOrderGuid):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.SubscriptionOrderGuid)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.GoDirectlyToNumber):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.GoDirectlyToNumber)
                <input type="submit" id="go-to-order-by-number" name="go-to-order-by-number" class="k-button" value="@T("Admin.Common.Go")" />
            </td>
        </tr>
        <tr>
            <td colspan="2">
                <input type="button" id="search-orders" class="k-button" value="@T("Admin.Common.Search")" />
            </td>
        </tr>
    </table>
    <table class="adminContent">
        <tr>
            <td>
                <div id="orders-grid"></div>

                <script>
                    $(document).ready(function() {
                        $("#orders-grid").kendoGrid({
                            dataSource: {
                                type: "json",
                                transport: {
                                    read: {
                                        url: "@Html.Raw(Url.Action("SubscriptionList", "SubscriptionOrder"))",
                                        type: "POST",
                                        dataType: "json",
                                        data: additionalData
                                    }
                                },
                                schema: {
                                    data: "Data",
                                    total: "Total",
                                    errors: "Errors"
                                },
                                requestEnd: function (e) {
                                    if (e.type == "read") {
                                        var response = e.response;
                                        if (response) {
                                            //store extra data
                                            reportAggregates = e.response["ExtraData"];
                                        }
                                    }
                                },
                                error: function(e) {
                                    display_kendoui_grid_error(e);
                                    // Cancel the changes
                                    this.cancelChanges();
                                },
                                pageSize: @(defaultGridPageSize),
                                serverPaging: true,
                                serverFiltering: true,
                                serverSorting: true
                            },
                            pageable: {
                                refresh: true,
                                pageSizes: [@(gridPageSizes)]
                            },
                            editable: {
                                confirmation: false,
                                mode: "inline"
                            },
                            scrollable: false,
                            dataBound: onDataBound,
                            columns: [
                                {
                                    field: "Id",
                                    headerTemplate: "<input id='mastercheckbox' type='checkbox'/>",
                                    headerAttributes: { style: "text-align:center" },
                                    attributes: { style: "text-align:center" },
                                    template: "<input type='checkbox' value='#=Id#' class='checkboxGroups'/>",
                                    width: 50
                                },
                                {
                                    field: "Id",
                                    title: "@T("Admin.SubscriptionOrders.Fields.ID")",
                                width: 50
                                },
                                @if (!Model.IsLoggedInAsVendor)
                                {
                                    //a vendor does not have access to this functionality
                                    <text>{
                                    field: "SubscriptionOrderStatus",
                                title: "@T("Admin.SubscriptionOrders.Fields.SubscriptionOrderStatus")",
                            width: 200
                        },</text>
                                }
                                {
                                    field: "PaymentStatus",
                                    title: "@T("Admin.SubscriptionOrders.Fields.PaymentStatus")",
                                    width: 200
                                },
                                @if (!Model.IsLoggedInAsVendor)
                                {
                                    //a vendor does not have access to this functionality
                                    <text>{
                                    field: "ShippingStatus",
                                        title: "@T("Admin.SubscriptionOrders.Fields.ShippingStatus")",
                            width: 200
                        },</text>
                                }
                                {
                                    field: "CustomerEmail",
                                    title: "@T("Admin.SubscriptionOrders.Fields.Customer")",
                                    width: 300,
                                    template: '#=CustomerFullName# (#=CustomerEmail#)'
                                },
                                {
                                    field: "StoreName",
                                    title: "@T("Admin.SubscriptionOrders.Fields.Store")",
                                    width: 200
                                }, {
                                    field: "CreatedOn",
                                    title: "@T("Admin.SubscriptionOrders.Fields.CreatedOn")",
                                    width: 200,
                                    type: "date",
                                    format: "{0:G}"
                                },
                                @if (!Model.IsLoggedInAsVendor)
                                {
                                    //a vendor does not have access to this functionality
                                    <text>{
                                    field: "SubscriptionOrderTotal",
                                    title: "@T("Admin.SubscriptionOrders.Fields.SubscriptionOrderTotal")",
                                    width: 200,
                                    footerTemplate: '<div><strong>@T("Admin.SubscriptionOrders.Report.Summary"):</strong></div>' +
                                                         '<div>@T("Admin.SubscriptionOrders.Report.Profit"): <span id=\"aggregator-profit-block\"></span></div>' +
                                                         '<div>@T("Admin.SubscriptionOrders.Report.Shipping"): <span id=\"aggregator-shipping-block\"></span></div>' +
                                                         '<div>@T("Admin.SubscriptionOrders.Report.Tax"): <span id=\"aggregator-tax-block\"></span></div>' +
                                                         '<div>@T("Admin.SubscriptionOrders.Report.Total"): <span id=\"aggregator-total-block\"></span></div>'
                                },</text>
                                }
                                {
                                    field: "Id",
                                    title: "@T("Admin.Common.View")",
                                    width: 100,
                                    template: '<a href="Edit/#=Id#">@T("Admin.Common.View")</a>'
                                }
                            ]
                        } );
                    });
                </script>

                <script type="text/javascript">

                    var selectedIds = [];
                    var reportAggregates = "";

                    $(document).ready(function () {

                        //search button
                        $('#search-orders').click(function () {
                            //search
                            var grid = $('#orders-grid').data('kendoGrid');
                            grid.dataSource.page(1); //new search. Set page size to 1
                            //grid.dataSource.read(); we already loaded the grid above using "page" function
                            //clear selected checkboxes
                            $('.checkboxGroups').attr('checked', false).change();
                            selectedIds = [];
                            return false;
                        });

                        $("#@Html.FieldIdFor(model => model.BillingEmail)").keydown(function (event) {
                            if (event.keyCode == 13) {
                                $("#search-orders").click();
                                return false;
                            }
                        });

                        $("#@Html.FieldIdFor(model => model.BillingLastName)").keydown(function (event) {
                            if (event.keyCode == 13) {
                                $("#search-orders").click();
                                return false;
                            }
                        });

                        $("#@Html.FieldIdFor(model => model.SubscriptionOrderNotes)").keydown(function (event) {
                            if (event.keyCode == 13) {
                                $("#search-orders").click();
                                return false;
                            }
                        });

                        $("#@Html.FieldIdFor(model => model.GoDirectlyToNumber)").keydown(function (event) {
                            if (event.keyCode == 13) {
                                $("#go-to-order-by-number").click();
                                return false;
                            }
                        });

                        $('#mastercheckbox').click(function () {
                            $('.checkboxGroups').attr('checked', $(this).is(':checked')).change();
                        });

                        //wire up checkboxes.
                        $('#orders-grid').on('change', 'input[type=checkbox][id!=mastercheckbox]', function (e) {
                            var $check = $(this);
                            if ($check.is(":checked") == true) {
                                var checked = jQuery.inArray($check.val(), selectedIds);
                                if (checked == -1) {
                                    //add id to selectedIds.
                                    selectedIds.push($check.val());
                                }
                            }
                            else {
                                var checked = jQuery.inArray($check.val(), selectedIds);
                                if (checked > -1) {
                                    //remove id from selectedIds.
                                    selectedIds = $.grep(selectedIds, function (item, index) {
                                        return item != $check.val();
                                    });
                                }
                            }
                            updateMasterCheckbox();
                        });
                    });

                    function additionalData() {
                        var data = {
                            StartDate: $('#@Html.FieldIdFor(model => model.StartDate)').val(),
                            EndDate: $('#@Html.FieldIdFor(model => model.EndDate)').val(),
                            SubscriptionOrderStatusId: $('#@Html.FieldIdFor(model => model.SubscriptionOrderStatusId)').val(),
                            PaymentStatusId: $('#@Html.FieldIdFor(model => model.PaymentStatusId)').val(),
                            ShippingStatusId: $('#@Html.FieldIdFor(model => model.ShippingStatusId)').val(),
                            StoreId: $('#@Html.FieldIdFor(model => model.StoreId)').val(),
                            VendorId: $('#@Html.FieldIdFor(model => model.VendorId)').val(),
                            WarehouseId: $('#@Html.FieldIdFor(model => model.WarehouseId)').val(),
                            BillingEmail: $('#@Html.FieldIdFor(model => model.BillingEmail)').val(),
                            BillingLastName: $('#@Html.FieldIdFor(model => model.BillingLastName)').val(),
                            BillingCountryId: $('#@Html.FieldIdFor(model => model.BillingCountryId)').val(),
                            PaymentMethodSystemName: $('#@Html.FieldIdFor(model => model.PaymentMethodSystemName)').val(),
                            PlanId: $('#@Html.FieldIdFor(model => model.PlanId)').val(),
                            SubscriptionOrderNotes: $('#@Html.FieldIdFor(model => model.SubscriptionOrderNotes)').val(),
                            SubscriptionOrderGuid: $('#@Html.FieldIdFor(model => model.SubscriptionOrderGuid)').val()
                        };
                        addAntiForgeryToken(data);
                        return data;
                    }

                    function onDataBound(e) {

                        $('#orders-grid input[type=checkbox][id!=mastercheckbox]').each(function () {
                            var currentId = $(this).val();
                            var checked = jQuery.inArray(currentId, selectedIds);
                            //set checked based on if current checkbox's value is in selectedIds.
                            $(this).attr('checked', checked > -1);
                        });

                        updateMasterCheckbox();

                        //update order totals summary
                        if (reportAggregates != "") {
                            for (var key in reportAggregates) {
                                $('#aggregator-profit-block').text(reportAggregates['aggregatorprofit']);
                                $('#aggregator-shipping-block').text(reportAggregates['aggregatorshipping']);
                                $('#aggregator-tax-block').text(reportAggregates['aggregatortax']);
                                $('#aggregator-total-block').text(reportAggregates['aggregatortotal']);
                            }
                        }
                    }

                    function updateMasterCheckbox() {
                        var numChkBoxes = $('#orders-grid input[type=checkbox][id!=mastercheckbox]').length;
                        var numChkBoxesChecked = $('#orders-grid input[type=checkbox][id!=mastercheckbox]:checked').length;
                        $('#mastercheckbox').attr('checked', numChkBoxes == numChkBoxesChecked && numChkBoxes > 0);
                    }
                </script>
            </td>
        </tr>
    </table>
}


@*export selected (XML). We don't use GET approach because it's limited to 2K-4K chars and won't work for large number of entities*@
@using (Html.BeginForm("ExportXmlSelected", "Subscription", FormMethod.Post, new { id = "export-xml-selected-form" }))
{
    @Html.AntiForgeryToken()
    <input type="hidden" id="selectedIds" name="selectedIds" value="" />
}
<script type="text/javascript">

    $(document).ready(function () {
        $('#exportxml-selected').click(function (e) {
            e.preventDefault();
            var ids = selectedIds.join(",");
            $('#export-xml-selected-form #selectedIds').val(ids);
            $('#export-xml-selected-form').submit();
            return false;
        });
    });

</script>

@*export selected (Excel). We don't use GET approach because it's limited to 2K-4K chars and won't work for large number of entities*@
@using (Html.BeginForm("ExportExcelSelected", "Subscription", FormMethod.Post, new { id = "export-excel-selected-form" }))
{
    @Html.AntiForgeryToken()
    <input type="hidden" id="selectedIds" name="selectedIds" value="" />
}
<script type="text/javascript">

    $(document).ready(function () {
        $('#exportexcel-selected').click(function (e) {
            e.preventDefault();
            var ids = selectedIds.join(",");
            $('#export-excel-selected-form #selectedIds').val(ids);
            $('#export-excel-selected-form').submit();
            return false;
        });
    });

</script>

@*Print packaging slips selected (XML). We don't use GET approach because it's limited to 2K-4K chars and won't work for large number of entities*@
@using (Html.BeginForm("PdfInvoiceSelected", "Subscription", FormMethod.Post, new { id = "pdf-invoice-selected-form" }))
{
    @Html.AntiForgeryToken()
    <input type="hidden" id="selectedIds" name="selectedIds" value="" />
}
<script type="text/javascript">

    $(document).ready(function () {
        $('#pdf-invoice-selected').click(function (e) {
            e.preventDefault();
            var ids = selectedIds.join(",");
            $('#pdf-invoice-selected-form #selectedIds').val(ids);
            $('#pdf-invoice-selected-form').submit();
            return false;
        });
    });

</script>
