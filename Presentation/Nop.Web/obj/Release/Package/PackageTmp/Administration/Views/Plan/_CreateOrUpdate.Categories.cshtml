@model PlanModel


@if (Model.Id > 0)
{
    if (Model.AvailableCategories.Count > 0)
    {
        <div id="plancategories-grid"></div>

        <script>
    $(document).ready(function () {
        $("#plancategories-grid").kendoGrid({
            dataSource: {
                type: "json",
                transport: {
                    read: {
                        url: "@Html.Raw(Url.Action("PlanCategoryList", "Plan", new { planId = Model.Id }))",
                        type: "POST",
                        dataType: "json",
                        data: addAntiForgeryToken
                    },
                    create: {
                        url: "@Html.Raw(Url.Action("PlanCategoryInsert", "Plan", new { planId = Model.Id }))",
                        type: "POST",
                        dataType: "json",
                        data: addAntiForgeryToken
                    },
                    update: {
                        url:"@Html.Raw(Url.Action("PlanCategoryUpdate", "Plan"))",
                        type: "POST",
                        dataType: "json",
                        data: addAntiForgeryToken
                    },
                    destroy: {
                        url: "@Html.Raw(Url.Action("PlanCategoryDelete", "Plan"))",
                        type: "POST",
                        dataType: "json",
                        data: addAntiForgeryToken
                    }
                },
                schema: {
                    data: "Data",
                    total: "Total",
                    errors: "Errors",
                    model: {
                        id: "Id",
                        fields: {
                            Category: { editable: true, type: "string" },
                            //PlanId: { editable: false, type: "number" },
                            CategoryId: { editable: true, type: "number" },
                            Quantity: { editable: true, type: "number" },
                            MyToyBoxQuantity: { editable: true, type: "number" },
                            DisplayOrder: { editable: true, type: "number" },
                            Id: { editable: false, type: "number" }
                        }
                    }
                },
                requestEnd: function (e) {
                    if (e.type == "create" || e.type == "update") {
                        this.read();
                    }
                },
                error: function (e) {
                    display_kendoui_grid_error(e);
                    // Cancel the changes
                    this.cancelChanges();
                },
                serverPaging: true,
                serverFiltering: true,
                serverSorting: true
            },
            pageable: {
                refresh: true,
                numeric: false,
                previousNext: false,
                info: false
            },
            toolbar: [{ name: "create", text: "@T("Admin.Common.AddNewRecord")" }],
            edit: function(e) {
                if (e.model.isNew()) {
                    //little hack here
                    //pre-select the first value of kendoui dropdownlist datasource
                    //for some reasons (maybe, bug) it always sends 0
                    //if no value has been selected (changed) in the dropdownlist
                    if (allCategories.length > 0) {
                        e.model.CategoryId = allCategories[0].Id;
                    }
                }
            },
            editable: {
                confirmation: false,
                mode: "inline"
            },
            scrollable: false,
            columns: [{
                field: "CategoryId",
                title: "@T("Admin.Catalog.Plans.Categories.Fields.Category")",
                width: 200,
                editor: categoryDropDownEditor,
                template: "#:Category#"
            },
              {  field: "Quantity",
                title: "Quantity",
                width: 200,
              },
                //vendor cannot edit this field
              {
                field: "MyToyBoxQuantity",
                title: "MyToyBoxQuantity",
                    width: 200,
                },
            {
                field: "DisplayOrder",
                title: "@T("Admin.Catalog.Plans.Categories.Fields.DisplayOrder")",
                width: 200,
                //integer format
                format: "{0:0}"
            }, {
                command: [{
                    name: "edit",
                    text: {
                        edit: "@T("Admin.Common.Edit")",
                        update: "@T("Admin.Common.Update")",
                        cancel: "@T("Admin.Common.Cancel")"
                    }
                }, {
                    name: "destroy",
                    text: "@T("Admin.Common.Delete")"
                }],
                width: 200
            }]
        });
    });

    //local datasource
    var allCategories = [
        @for (int i = 0; i < Model.AvailableBaseCategories.Count; i++)
                {
                    var categoryItem = Model.AvailableBaseCategories[i];
                    <text>
                {
                    Id: @(categoryItem.Value),
                    Name: "@(Html.Raw(HttpUtility.JavaScriptStringEncode(categoryItem.Text)))"
                }
                </text>
                    if (i != Model.AvailableCategories.Count - 1)
                    {
                        <text>,</text>
                    }
                }
    ];

    function categoryDropDownEditor(container, options) {
        $('<input required data-text-field="Name" data-value-field="Id" data-bind="value:CategoryId"/>')
            .appendTo(container)
            .kendoDropDownList({
                autoBind: false,
                dataSource: allCategories
            });
    }
        </script>
    }
    else
    {
    @T("Admin.Catalog.Plans.Categories.NoCategoriesAvailable")
    }
}
else
{
    @T("Admin.Catalog.Plans.Categories.SaveBeforeEdit")
}

