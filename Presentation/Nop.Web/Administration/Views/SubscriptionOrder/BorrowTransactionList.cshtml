@model Nop.Admin.Models.SubscriptionOrders.BorrowTransactionListModel
           
@{
    var defaultGridPageSize = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().DefaultGridPageSize;
    var gridPageSizes = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().GridPageSizes;


    //page title
    ViewBag.Title = T("Admin.SubscriptionOrders.Shipments.List").Text;
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="section-header">
        <div class="title">
            <img src="@Url.Content("~/Administration/Content/images/ico-sales.png")" alt="" />
            @T("Admin.SubscriptionOrders.Shipments.List")
        </div>
        <div class="options">
            <input type="submit" name="exportpackagingslips-all" class="k-button" value="@T("Admin.SubscriptionOrders.Shipments.PrintPackagingSlip.All")" />
            <input type="button" id="exportpackagingslips-selected" class="k-button" value="@T("Admin.SubscriptionOrders.Shipments.PrintPackagingSlip.Selected")" />
            <input type="button" id="ship-selected" class="k-button" value="@T("Admin.SubscriptionOrders.Shipments.ShipSelected")" />
            <input type="button" id="deliver-selected" class="k-button" value="@T("Admin.SubscriptionOrders.Shipments.DeliverySelected")" />
        </div>
    </div>
    <table width="100%">
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.StartDate):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.StartDate)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.EndDate):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.EndDate)
            </td>
        </tr>
        
        
        <tr>
            <td colspan="2">
                <input type="button" id="search-shipments" class="k-button" value="@T("Admin.Common.Search")" />
            </td>
        </tr>
    </table>
    <table class="adminContent">
        <tr>
            <td>
                <div id="carts-grid"></div>

                <script>
    $(document).ready(function() {
        $("#carts-grid").kendoGrid({
            dataSource: {
                type: "json",
                transport: {
                    read: {
                        url: "@Html.Raw(Url.Action("BorrowTransactionList", "SubscriptionOrder"))",
                        type: "POST",
                        dataType: "json",
                        data: addAntiForgeryToken
                    }
                },
                schema: {
                    data: "Data",
                    total: "Total",
                    errors: "Errors"
                },
                error: function(e) {
                    display_kendoui_grid_error(e);
                    // Cancel the changes
                    this.cancelChanges();
                },
                pageSize: @(defaultGridPageSize),
                serverPaging: true,
                serverFiltering: true,
                serverSorting: true
            },
            pageable: {
                refresh: true,
                pageSizes: [@(gridPageSizes)]
            },
            //details grid
            detailInit: detailInit,
            scrollable: false,
            columns: [

                {
                    field: "OrderItemId",
                    title: "TransactionId",
                },   {
                    field: "CustomerEmail",
                    title: "Customer",
                    width: 200
                },{
                    field: "SubscriptionOrderId",
                    title: "SubscriptionOrderId",
                    template: '<a href="@Url.Content("~/Admin/SubscriptionOrder/Edit/")#=SubscriptionOrderId#">#:SubscriptionOrderId#</a>'
                },{
                    field: "SubscriptionOrderStatus",
                    title: "@T("Admin.SubscriptionOrders.Fields.SubscriptionOrderStatus")",
                width: 200
    },
                 {
                     field: "PaymentStatus",
                     title: "@T("Admin.SubscriptionOrders.Fields.PaymentStatus")",
                     width: 200
                 },
                 {
                     field: "ShippingStatus",
                     title: "@T("Admin.SubscriptionOrders.Fields.ShippingStatus")",
                     width: 200
                 },{
                     field: "TotalItems",
                     title: "@T("Admin.CurrentCarts.TotalItems")",
                     width: 150
                 }
            ]
        });
    });

    //details grid
    function detailInit(e) {
        $("<div/>").appendTo(e.detailCell).kendoGrid({
            dataSource: {
                type: "json",
                transport: {
                    read: {
                        url: "@Html.Raw(Url.Action("GetBorrowTransactionDetails", "SubscriptionOrder"))?orderItemId="+e.data.OrderItemId,
                        type: "POST",
                        dataType: "json",
                        data: addAntiForgeryToken
                    }
                },
                schema: {
                    data: "Data",
                    total: "Total",
                    errors: "Errors"
                },
                error: function(e) {
                    display_kendoui_grid_error(e);
                    // Cancel the changes
                    this.cancelChanges();
                },
                serverPaging: true,
                serverFiltering: true,
                serverSorting: true
            },
            scrollable: false,
            sortable: true,
            pageable: {
                refresh: true,
                numeric: false,
                previousNext: false,
                info: false
            },
            columns: [
                {
                    field: "ProductName",
                    title: "@T("Admin.CurrentCarts.Product")",
                    template: '<a href="@Url.Content("~/Admin/Product/Edit/")#=ProductId#">#:ProductName#</a>' +
                        '# if(AttributeInfo && AttributeInfo.length > 0) {# <br />#=AttributeInfo# #} #',
                    width: 400
                },{
                    field: "QuantityOrdered",
                    title: "@T("Admin.CurrentCarts.Quantity")",
                    width: 150
                },{
                    field: "QuantityInAllShipments",
                    title: "Quantity In All Shipments",
                    width: 150
                },{
                    field: "UpdatedOn",
                    title: "@T("Admin.CurrentCarts.UpdatedOn")",
                    width: 150,
                    type: "date",
                    format: "{0:G}"
                }
            ]
        });
    }
                </script>
            </td>
        </tr>
    </table>
    
    <script type="text/javascript">

        var selectedIds = [];

        $(document).ready(function () {

            //load states when changing a country dropdownlist
             
            
            //search button
            $('#search-shipments').click(function () {
                //search
                var grid = $('#shipments-grid').data('kendoGrid');
                grid.dataSource.page(1); //new search. Set page size to 1
                //grid.dataSource.read(); we already loaded the grid above using "page" function
                //clear selected checkboxes
                $('.checkboxGroups').attr('checked', false).change();
                selectedIds = [];
                return false;
            });


            //"ship selected" button
            $('#ship-selected').click(function(e) {
                e.preventDefault();

                var postData = {
                    selectedIds: selectedIds
                };
                addAntiForgeryToken(postData);

                $.ajax({
                    cache: false,
                    type: "POST",
                    url: "@(Url.Action("SetAsShippedSelected", "Subscription"))",
                    data: postData,
                    complete: function(data) {
                        //reload grid
                        var grid = $('#shipments-grid').data('kendoGrid');
                        grid.dataSource.read();
                    },
                    error: function(xhr, ajaxOptions, thrownError) {
                        alert(thrownError);
                    },
                    traditional: true
                });
                return false;
            });

            //"deliver selected" button
            $('#deliver-selected').click(function(e) {
                e.preventDefault();

                var postData = {
                    selectedIds: selectedIds
                };
                addAntiForgeryToken(postData);

                $.ajax({
                    cache: false,
                    type: "POST",
                    url: "@(Url.Action("SetAsDeliveredSelected", "Subscription"))",
                    data: postData,
                    complete: function(data) {
                        //reload grid
                        var grid = $('#shipments-grid').data('kendoGrid');
                        grid.dataSource.read();
                    },
                    error: function(xhr, ajaxOptions, thrownError) {
                        alert(thrownError);
                    },
                    traditional: true
                });
                return false;
            });

            
            $('#mastercheckbox').click(function () {
                $('.checkboxGroups').attr('checked', $(this).is(':checked')).change();
            });

            //wire up checkboxes. 
            $('#shipments-grid').on('change', 'input[type=checkbox][id!=mastercheckbox]', function (e) {
                var $check = $(this);
                if ($check.is(":checked") == true) {
                    var checked = jQuery.inArray($check.val(), selectedIds);
                    if (checked == -1) {
                        //add id to selectedIds.  
                        selectedIds.push($check.val());
                    }
                }
                else {
                    var checked = jQuery.inArray($check.val(), selectedIds);
                    if (checked > -1) {
                        //remove id from selectedIds.  
                        selectedIds = $.grep(selectedIds, function (item, index) {
                            return item != $check.val();
                        });
                    }
                }
                updateMasterCheckbox();
            });
        });

        function additionalData() {
            var data = {
                StartDate: $('#@Html.FieldIdFor(model => model.StartDate)').val(),
                EndDate: $('#@Html.FieldIdFor(model => model.EndDate)').val(),
            };
            addAntiForgeryToken(data);
            return data;
        }
    
        function onDataBound(e) {
            $('#shipments-grid input[type=checkbox][id!=mastercheckbox]').each(function () {
                var currentId = $(this).val();
                var checked = jQuery.inArray(currentId, selectedIds);
                //set checked based on if current checkbox's value is in selectedIds.  
                $(this).attr('checked', checked > -1);
            });

            updateMasterCheckbox();
        }

        function updateMasterCheckbox() {
            var numChkBoxes = $('#shipments-grid input[type=checkbox][id!=mastercheckbox]').length;
            var numChkBoxesChecked = $('#shipments-grid input[type=checkbox][id!=mastercheckbox]:checked').length;
            $('#mastercheckbox').attr('checked', numChkBoxes == numChkBoxesChecked && numChkBoxes > 0);
        }
   </script>
    
}

@*export selected (Excel). We don't use GET approach because it's limited to 2K-4K chars and won't work for large number of entities*@
@using (Html.BeginForm("PdfPackagingSlipSelected", "Subscription", FormMethod.Post, new { id = "pdf-packaging-slip-selected-form" }))
{
    @Html.AntiForgeryToken()
    <input type="hidden" id="selectedIds" name="selectedIds" value="" />
}
<script type="text/javascript">

    $(document).ready(function () {
        $('#exportpackagingslips-selected').click(function (e) {
            e.preventDefault();
            var ids = selectedIds.join(",");
            $('#pdf-packaging-slip-selected-form #selectedIds').val(ids);
            $('#pdf-packaging-slip-selected-form').submit();
            return false;
        });
    });

</script>